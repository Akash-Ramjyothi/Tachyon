import com.linkedin.gradle.DistributeTask

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

group = GROUP_ID

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName VERSION_NAME
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "androidx.fragment:fragment:1.0.0"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.22.0'
}

version = VERSION_NAME

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        aar(MavenPublication) {

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar") {
                builtBy assemble
            }
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    description = LIBRARY_DESCRIPTION
                    url 'https://github.com/linkedin/Tachyon'
                    scm {
                        url 'https://github.com/linkedin/Tachyon'
                        connection 'scm:git:git://github.com/linkedin/Tachyon.git'
                        developerConnection 'https://github.com/linkedin/Tachyon.git'
                    }
                    licenses {
                        license {
                            name '2-Clause BSD License'
                            url 'https://opensource.org/licenses/BSD-2-Clause'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'com.linkedin'
                            name 'LinkedIn Corp.'
                            email ''
                        }
                    }

                    dependencies {
                        configurations.implementation.allDependencies.each { ModuleDependency dp ->
                            dependency {
                                resolveStrategy = Closure.DELEGATE_ONLY
                                groupId dp.group
                                artifactId dp.name
                                version dp.version
                            }
                        }
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'https://linkedin.jfrog.io/linkedin'
    publish {
        repoKey = 'Tachyon'
        username = System.getenv('ARTIFACTORY_USER') ?: ''
        password = System.getenv('ARTIFACTORY_KEY') ?: ''

        defaults {
            publications ('aar')
            publishArtifacts = true
        }
    }
    clientConfig.setIncludeEnvVars(false)
}

task distributeBuild(type: DistributeTask) {
    dependsOn 'artifactoryPublish'
}
